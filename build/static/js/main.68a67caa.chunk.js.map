{"version":3,"sources":["components/article/Article.jsx","assets/blog01.png","assets/blog02.png","assets/blog03.png","assets/blog04.png","assets/blog05.png","containers/blog/Blog.jsx","components/feature/Feature.jsx","containers/features/Features.jsx","containers/footer/Footer.jsx","assets/ai.png","assets/people.png","containers/header/Header.jsx","assets/possibility.png","containers/possibility/Possibility.jsx","containers/whatGPT3/WhatGPT3.jsx","assets/shant.png","assets/person1.png","assets/martin.png","containers/team/team.jsx","assets/google.png","assets/dropbox.png","assets/shopify.png","components/brand/Brand.jsx","components/cta/CTA.jsx","logo.png","state/toasts/index.js","state/hooks.js","utils/getRpcUrl.js","utils/web3React.js","utils/wallet.js","hooks/useAuth.js","utils/web3.js","hooks/useWeb3.js","utils/Environment.js","utils/contractHelpers.js","hooks/Minting.js","hooks/getDimensions.js","hooks/loader.js","components/navbar/Navbar.jsx","hooks/useEagerConnect.js","App.js","redux/Reducers/productReducers.js","redux/Reducers/Index.js","redux/store.js","index.js"],"names":["Article","imgUrl","date","text","className","src","alt","Blog","id","blog01","blog02","blog03","blog04","blog05","Feature","title","featuresData","Features","map","item","index","Footer","target","rel","href","Header","Helmet","async","ai","Possibility","possibilityImage","WhatGPT3","Team","Person1","Shant","Martin","Brand","google","dropbox","shopify","CTA","toastsSlice","createSlice","name","initialState","data","reducers","push","state","action","payload","toastIndex","findIndex","toast","splice","unshift","remove","clear","actions","toastTypes","nodes","process","getNodeUrl","randomIndex","random","length","ConnectorNames","rpcUrl","chainId","parseInt","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","setupNetwork","a","provider","window","ethereum","request","method","params","toString","console","error","useAuth","useWeb3React","activate","deactivate","toastError","dispatch","useDispatch","useMemo","pushToast","description","kebabCase","type","toastInfo","toastSuccess","toastWarning","removeToast","clearToast","useToast","login","useCallback","connectorID","connector","UnsupportedChainIdError","walletConnectProvider","undefined","message","logout","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","web3NoAccount","getWeb3NoAccount","useWeb3","library","refEth","useRef","useState","web3","setweb3","useEffect","current","Environment","musabContract","SkeletonContract","address","abi","eth","Contract","getContract","tickting","Minting","account","privKey","HDWalletProvider","contractAddress","environment","web31","contract","userMinting","mintVal","log","deadline","Date","now","soliditySha3Expected","soliditySha3","accounts","sign","methods","Price","call","fees","MINT_NFT_FEE","Mint","send","from","value","utils","toWei","on","tx","transactionHash","catch","err","details","getWindowDimensions","width","innerWidth","height","innerHeight","Loader","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","style","marginTop","zIndex","marginLeft","background","filter","Navbar","toggleMenu","setToggleMenu","setShowNav","downloadable","setDownloadable","mainLoader","setMainLoader","minto","res","code","success","warning","checkBalance","balanceOf","balance","logo","onClick","color","size","class","tabindex","$","modal","useEagerConnect","connectorId","localStorage","getItem","App","products","cart","combineReducers","allProducts","qty","existItem","find","x","concat","alert","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getLibrary","document","getElementById"],"mappings":"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","file":"static/js/main.68a67caa.chunk.js","sourcesContent":["import React from 'react';\r\nimport './article.css';\r\n\r\nconst Article = ({ imgUrl, date, text }) => (\r\n  <div className=\"gpt3__blog-container_article\">\r\n    <div className=\"gpt3__blog-container_article-image\">\r\n      <img src={imgUrl} alt=\"blog_image\" />\r\n    </div>\r\n    <div className=\"gpt3__blog-container_article-content\">\r\n      <div>\r\n        <p>{date}</p>\r\n        <h3>{text}</h3>\r\n      </div>\r\n      <p>Opening soon</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Article;\r\n","export default __webpack_public_path__ + \"static/media/blog01.ca941581.png\";","export default __webpack_public_path__ + \"static/media/blog02.cef4bf25.png\";","export default __webpack_public_path__ + \"static/media/blog03.9784676f.png\";","export default __webpack_public_path__ + \"static/media/blog04.8e003c70.png\";","export default __webpack_public_path__ + \"static/media/blog05.a064f6ae.png\";","import React from 'react';\r\nimport Article from '../../components/article/Article';\r\nimport { blog01, blog02, blog03, blog04, blog05 } from './imports';\r\nimport './blog.css';\r\n\r\nconst Blog = () => (\r\n  <div className=\"gpt3__blog section__padding\" id=\"blog\">\r\n    <div className=\"gpt3__blog-heading\">\r\n      <h1 className=\"gradient__text\">A lot is happening <br /> Unreal v2.2 is in.</h1>\r\n    </div>\r\n    <div className=\"gpt3__blog-container\">\r\n      <div className=\"gpt3__blog-container_groupA\">\r\n        <Article imgUrl={blog01} date=\"Jan 21,2022\" text=\"Akasha Metaverse officially launch.\" />\r\n      </div>\r\n      <div className=\"gpt3__blog-container_groupB\">\r\n        <Article imgUrl={blog02} date=\"May 26, 2022\" text=\"Fashion at akasha metaverse. a new way to express.\" />\r\n        <Article imgUrl={blog03} date=\"June 21, 2022\" text=\"Elevating education with more hands-on experiment at akasha.\" />\r\n        <Article imgUrl={blog04} date=\"April 12, 2022\" text=\"Collaboration and work at akasha metaverse.\" />\r\n        <Article imgUrl={blog05} date=\"sep 26, 2022\" text=\"The gaming experience is a breez at akasha.\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Blog;\r\n","import React from 'react';\r\nimport './feature.css';\r\n\r\nconst Feature = ({ title, text }) => (\r\n  <div className=\"gpt3__features-container__feature\">\r\n    <div className=\"gpt3__features-container__feature-title\">\r\n      <div />\r\n      <h1>{title}</h1>\r\n    </div>\r\n    <div className=\"gpt3__features-container_feature-text\">\r\n      <p>{text}</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Feature;\r\n","import React from 'react';\r\nimport Feature from '../../components/feature/Feature';\r\nimport './features.css';\r\n\r\nconst featuresData = [\r\n  {\r\n    title: 'Create.',\r\n    text: 'Create your own personalized world, a world you feel the most comfortable and proud at and share it with others.',\r\n  },\r\n  {\r\n    title: 'Explore.',\r\n    text: 'Explore your friends worlds and see the life from their perspectives.',\r\n  },\r\n  {\r\n    title: 'Trade.',\r\n    text: 'Buy and sell digital items, enjoy the experience while making money on the go.',\r\n  },\r\n  {\r\n    title: 'Own.',\r\n    text: 'Own your virtual world  your digital items with the ultra privacy blockchain offers.',\r\n  },\r\n];\r\n\r\nconst Features = () => (\r\n  <div className=\"gpt3__features section__padding\" id=\"features\">\r\n    <div className=\"gpt3__features-heading\">\r\n      <h1 className=\"gradient__text\">The Future is Now and You Just Need to Realize It. Step into Future Today. & Make it Happen.</h1>\r\n      <p>Opening Soon</p>\r\n    </div>\r\n    <div className=\"gpt3__features-container\">\r\n      {featuresData.map((item, index) => (\r\n        <Feature title={item.title} text={item.text} key={item.title + index} />\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Features;\r\n","import React from 'react';\r\n// import gpt3Logo from '../../logo.svg';\r\nimport './footer.css';\r\n\r\nconst Footer = () => (\r\n  <div className=\"gpt3__footer section__padding\">\r\n    <div className=\"gpt3__footer-heading\">\r\n      <h1 className=\"gradient__text\">Do you want to step in to the future before others</h1>\r\n    </div>\r\n\r\n<p>\r\n    <div className=\"gpt3__footer-btn\">\r\n    <a target=\"_blank\" rel=\"noreferrer\" href=\"https://forms.gle/RmPfXnLzgbuYAqPY6\"> <button id=\"bt\" >Get on the WHITE LIST</button> </a>\r\n    </div>\r\n    </p>\r\n\r\n    <div className=\"gpt3__footer-links\">\r\n      <div className=\"gpt3__footer-links_logo\">\r\n        {/* <img src={gpt3Logo} alt=\"gpt3_logo\" /> */}\r\n        <p><br />WEB 3.0</p>\r\n      </div>\r\n      <div className=\"gpt3__footer-links_div\">\r\n        <h4>Twitter</h4>\r\n        <p>Contact</p>\r\n      </div>\r\n      <div className=\"gpt3__footer-links_div\">\r\n        <h4>Get in touch</h4>\r\n        <a target=\"_blank\" rel=\"noreferrer\" href=\"https://twitter.com/akashaverse\"> <button id=\"bt\" >Twitter</button> </a>\r\n        <p>dcl@akasha.gl</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"gpt3__footer-copyright\">\r\n      <p>@2022 Beamport Analytics. All rights reserved. By @En-nasryRida</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/ai.aa60586b.png\";","export default __webpack_public_path__ + \"static/media/people.5cd2d6fb.png\";","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport people from '../../assets/people.png';\r\nimport ai from '../../assets/ai.png';\r\nimport './header.css';\r\n// import ReactPlayer from 'react-player'\r\n\r\nconst Header = () => (\r\n  <div className=\"gpt3__header section__padding\" id=\"home\">\r\n    <div className=\"gpt3__header-content\">\r\n      <h1 className=\"gradient__text\">Akasha Multiverse</h1>\r\n      <div className=\"wrapper\">\r\n        <div className=\"video-main\">\r\n          <div className=\"promo-video\">\r\n            <div className=\"waves-block\">\r\n              <div className=\"waves wave-1\" />\r\n              <div className=\"waves wave-2\" />\r\n              <div className=\"waves wave-3\" />\r\n            </div>\r\n          </div>\r\n          <Helmet>\r\n            <script\r\n              async\r\n              src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js\"\r\n            />\r\n            <script\r\n              async\r\n              src=\"https://cdnjs.cloudflare.com/ajax/libs/lity/2.4.0/lity.min.js\"\r\n            />\r\n          </Helmet>\r\n          <a\r\n            href=\"https://youtu.be/vDwgWHw7eWA\"\r\n            className=\"video video-popup mfp-iframe\"\r\n            data-lity\r\n          >\r\n            <i className=\"fa fa-play\" />\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <p>\r\n        Connections are evolving and so should we. <br /> Akasha Metaverse is a\r\n        virtual heaven where the possibilities are limitless.\r\n      </p>\r\n      <div className=\"gpt3__header-content__input\">\r\n      <a target=\"_blank\" rel=\"noreferrer\" href=\"https://discord.gg/aeeHKD6AR3\"> <button id=\"bt\" >Join discord</button> </a>\r\n        \r\n      </div>\r\n      <div className=\"gpt3__header-content__people\">\r\n        <p>Support Server & Join Community</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"gpt3__header-image\">\r\n      <img src={ai} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/possibility.525f13b6.png\";","import React from 'react';\r\nimport possibilityImage from '../../assets/possibility.png';\r\nimport './possibility.css';\r\n\r\nconst Possibility = () => (\r\n  <div className=\"gpt3__possibility section__padding\" id=\"possibility\">\r\n    <div className=\"gpt3__possibility-image\">\r\n      <img src={possibilityImage} alt=\"possibility\" />\r\n    </div>\r\n    <div className=\"gpt3__possibility-content\">\r\n      <h4>Early Access Soon</h4>\r\n      <h1 className=\"gradient__text\">The possibilities are <br /> beyond your imagination</h1>\r\n      <p>Akasha builds technologies that help people connect, find communities, and grow businesses. It will let you share immersive experiences with other people even when you can’t be together — and do things together you couldn’t do in the physical world. It’s the next evolution in a long line of social technologies. be part of us.</p>\r\n      <h4>Education & Sustainability is key.</h4>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Possibility;\r\n","import React from 'react';\r\nimport Feature from '../../components/feature/Feature';\r\nimport './whatGPT3.css';\r\n\r\nconst WhatGPT3 = () => (\r\n  <div className=\"gpt3__whatgpt3 section__margin\" id=\"wgpt3\">\r\n    <div className=\"gpt3__whatgpt3-feature\">\r\n      <Feature title=\"What is Akasha\" text=\"Akasha Metaverse is the largest virtual reality social connection in 21 centery. we focus on connection adventure and education.Built on Unreal Engine and Blockchain with our governance token $ROLAIS we're aiming to deliver the best most secure social space for you. join us now.\" />\r\n    </div>\r\n    <div className=\"gpt3__whatgpt3-heading\">\r\n      <h1 className=\"gradient__text\">Virtual Heaven</h1>\r\n      <a target=\"_blank\" rel=\"noreferrer\" href=\"https://forms.gle/RmPfXnLzgbuYAqPY6\"> <button id=\"bt\" >Get on the WHITE LIST</button> </a>\r\n    </div>\r\n    <div className=\"gpt3__whatgpt3-container\">\r\n      <Feature title=\"Connection\" text=\"Virtual Reality is the future of connection, the distance will vanish you can connect and share with others in a way you couldn't imagined before.\" />\r\n      <Feature title=\"Adventure\" text=\"Every moment is right at your eyes. attend international concerts visit the other half of the world see it touch it feel it and much more all from your bedroom.\" />\r\n      <Feature title=\"Education\" text=\"We integrate virtual reality with knowledge to bring the best and most effective educational experience hands on learning experience and live experiments. the best integration ever.\" />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default WhatGPT3;\r\n","export default __webpack_public_path__ + \"static/media/shant.8f4eadb8.png\";","export default __webpack_public_path__ + \"static/media/person1.c7cbe279.png\";","export default __webpack_public_path__ + \"static/media/martin.86954b11.png\";","import React from 'react';\r\nimport './team.css';\r\nimport Shant from '../../assets/shant.png';\r\nimport Person1 from '../../assets/person1.png';\r\nimport Martin from '../../assets/martin.png';\r\n\r\nconst Team = () => (\r\n  <div>\r\n    {/* <h4 className=\"note text-danger text-center\" /> */}\r\n    <section>\r\n      <div className=\"container\" id=\"team\">\r\n        <div className=\"row flex-center sm-no-flex\">\r\n          <div className=\"pull-right sm-no-float col-md-8\">\r\n            <ul className=\"team-members\">\r\n              {/* <!-- single member row starts --> */}\r\n              <li className=\"clearfix\">\r\n                <div className=\"member-details\">\r\n                  <div>\r\n                    <img src={Person1} alt=\"UI Designer\" />\r\n                    <div className=\"member-info\">\r\n                      <h3>Alan Solis</h3>\r\n                      <p>CMO</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"member-details\">\r\n                  <div>\r\n                    <img src={Shant} alt=\"UI Designer\" />\r\n                    <div className=\"member-info\">\r\n                      <h3>Shant Pourian</h3>\r\n                      <p>CBO</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"member-details\">\r\n                  <div>\r\n                    <img\r\n                      src={Martin}\r\n                      alt=\"CMO\"\r\n                    />\r\n                    <div className=\"member-info\">\r\n                      <h3>Martin Kuprik</h3>\r\n                      <p>CEO & Founder</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              {/* <!-- /single member row ends --> */}\r\n            </ul>\r\n            {/* <!-- /end team-photos --> */}\r\n          </div>\r\n          <div className=\"pull-left col-md-4 sm-text-center\">\r\n            <div className=\"team-overview\">\r\n              <h2>Who Are We?</h2>\r\n              <p>\r\n                <div>\r\n                  Akasha Metaverse Team marries deep VR industry experience with\r\n                  passion for virtual social and its users. We aim to combine\r\n                  Virtual world with professional-quality content. Akasha\r\n                  Metaverse Team brings a wealth of experience to the space, to\r\n                  build highly-engaging experiences in the metaverse.\r\n                </div>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          {/* <!-- /end col-md-4 --> */}\r\n        </div>\r\n        {/* <!-- /end row --> */}\r\n      </div>\r\n      {/* <!-- /end container --> */}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nexport default Team;\r\n","export default __webpack_public_path__ + \"static/media/google.54dc1fc9.png\";","export default __webpack_public_path__ + \"static/media/dropbox.e9792e93.png\";","export default __webpack_public_path__ + \"static/media/shopify.e9b6fccf.png\";","import React from 'react';\r\nimport { google, dropbox, shopify } from './imports';\r\nimport './brand.css';\r\n\r\nconst Brand = () => (\r\n  <div className=\"gpt3__brand section__padding\">\r\n    <div>\r\n      <img src={google} className=\"google\" />\r\n    </div>\r\n    <div>\r\n      <img src={dropbox} className=\"dropbox\" />\r\n    </div>\r\n    <div>\r\n      <img src={shopify} className=\"shopify\" />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Brand;\r\n","import React from 'react';\r\nimport './cta.css';\r\n\r\nconst CTA = () => (\r\n  <div className=\"gpt3__cta\">\r\n    <div className=\"gpt3__cta-content\">\r\n      <p>Join Discord</p>\r\n      <h3>Register Today & start exploring the endless possibilities.</h3>\r\n    </div>\r\n    <div className=\"gpt3__cta-btn\">\r\n    <a target=\"_blank\" rel=\"noreferrer\" rel=\"noreferrer\" href=\"https://forms.gle/RmPfXnLzgbuYAqPY6\"> <button id=\"bt\" >Get on the WHITE LIST</button> </a>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default CTA;\r\n","export default __webpack_public_path__ + \"static/media/logo.9cd7bcae.png\";","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  data: [],\r\n}\r\n\r\nexport const toastsSlice = createSlice({\r\n  name: 'toasts',\r\n  initialState,\r\n  reducers: {\r\n    push: (state, action) => {\r\n      const { payload } = action\r\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\r\n\r\n      // If id already matches remove it before adding it to the top of the stack\r\n      if (toastIndex >= 0) {\r\n        state.data.splice(toastIndex, 1)\r\n      }\r\n\r\n      state.data.unshift(payload)\r\n    },\r\n    remove: (state, action) => {\r\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\r\n\r\n      if (toastIndex >= 0) {\r\n        state.data.splice(toastIndex, 1)\r\n      }\r\n    },\r\n    clear: (state) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { clear, remove, push } = toastsSlice.actions\r\n\r\nexport default toastsSlice.reducer\r\n","import { useMemo } from 'react'\r\nimport { kebabCase } from 'lodash'\r\n// import { Toast, toastTypes } from '@babefinance/uikit'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n    push as pushToast,\r\n    remove as removeToast,\r\n    clear as clearToast,\r\n} from './actions'\r\n\r\nconst toastTypes = {\r\n    SUCCESS: \"string\",\r\n    DANGER: \"string\",\r\n    WARNING: \"string\",\r\n    INFO: \"string\",\r\n};\r\n\r\n\r\nexport const useToast = () => {\r\n    const dispatch = useDispatch()\r\n    const helpers = useMemo(() => {\r\n        const push = (toast) => dispatch(pushToast(toast))\r\n\r\n        return {\r\n            toastError: (title, description) => {\r\n                return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\r\n            },\r\n            toastInfo: (title, description) => {\r\n                return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\r\n            },\r\n            toastSuccess: (title, description) => {\r\n                return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\r\n            },\r\n            toastWarning: (title, description) => {\r\n                return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\r\n            },\r\n            push,\r\n            remove: (id) => dispatch(removeToast(id)),\r\n            clear: () => dispatch(clearToast()),\r\n        }\r\n    }, [dispatch])\r\n\r\n    return helpers\r\n}","import random from 'lodash/random'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  const randomIndex = random(0, nodes.length - 1)\r\n  return nodes[randomIndex]\r\n}\r\n\r\nexport default getNodeUrl\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport getNodeUrl from './getRpcUrl'\r\n\r\nconst ConnectorNames = {\r\n    Injected: \"injected\",\r\n    WalletConnect: \"walletconnect\",\r\n    BSC: \"bsc\"\r\n}\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n    rpc: { [chainId]: rpcUrl },\r\n    bridge: 'https://bridge.walletconnect.org',\r\n    qrcode: true,\r\n    pollingInterval: POLLING_INTERVAL,\r\n})\r\n\r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName = {\r\n    [ConnectorNames.Injected]: injected,\r\n    [ConnectorNames.WalletConnect]: walletconnect,\r\n    [ConnectorNames.BSC]: bscConnector,\r\n}\r\n\r\nexport const getLibrary = (provider) => {\r\n    return provider\r\n}\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = (window).ethereum\r\n  if (provider) {\r\n    // const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    const chainId = 4\r\n    try {\r\n      await provider.request({\r\n        // method: 'wallet_addEthereumChain',\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            // chainName: 'Ethereum',\r\n            // nativeCurrency: {\r\n            //   name: 'ETH',\r\n            //   symbol: 'eth',\r\n            //   decimals: 18,\r\n            // },\r\n            // // rpcUrls: nodes,\r\n            // blockExplorerUrls: ['https://etherscan.io/'],\r\n            // blockExplorerUrls: ['https://testnet.bscscan.com/'],\r\n\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress,\r\n  tokenSymbol,\r\n  tokenDecimals,\r\n  tokenImage,\r\n) => {\r\n  const tokenAdded = await (window).ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { useToast } from '../state/hooks'\r\nimport { connectorsByName } from '../utils/web3React'\r\nimport { setupNetwork } from '../utils/wallet'\r\n\r\nconst useAuth = () => {\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  \r\n  const login = useCallback((connectorID) => {\r\n      const connector = connectorsByName[connectorID]\r\n      if (connector) {\r\n      // alert(\"all goog\")\r\n      activate(connector, async (error) => {\r\n        if (error instanceof UnsupportedChainIdError) {\r\n          const hasSetup = await setupNetwork()\r\n          if (hasSetup) {\r\n            activate(connector)\r\n          }\r\n        } else {\r\n          connector.walletConnectProvider = undefined\r\n          toastError(error.name, error.message)\r\n        }\r\n      })\r\n    } else {\r\n      toastError(\"Can't find connector\", 'The connector config is wrong')\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return { login, logout: deactivate }\r\n}\r\n\r\nexport default useAuth;\r\n","import Web3 from 'web3'\r\nimport getRpcUrl from './getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 })\r\nconst web3NoAccount = new Web3(httpProvider)\r\n\r\nconst getWeb3NoAccount = () => {\r\n  return web3NoAccount\r\n}\r\n\r\nexport { getWeb3NoAccount }\r\nexport default web3NoAccount","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getWeb3NoAccount } from '../utils/web3'\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { library } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","let Environment = {\r\n  // disperser: \"0xE7ac4Cc1da49A78875a30215BB43d3638ce316C8\",\r\n  // base_url: \"https://api.quecko.com/v1\", // musabContract: \"0xf41CCd39c65438Bb000d1e67EbDBE25Da14A4252\",\r\n\r\n  // musab bhai contract\r\n  musabContract: \"0x513Cfd729DeEadd4BBfB8Cb5014e6C63d67a787a\",\r\n\r\n\r\n  // 0xfBdA3CBC52Efd4fD83679066CCC6524DfBd2328A\r\n};\r\n\r\nexport default Environment;\r\n","import web3NoAccount from \"./web3\";\r\nimport tickting from \"./tickting.json\";\r\n\r\n\r\nconst getContract = (abi, address, web3) => {\r\n    const _web3 = web3 ?? web3NoAccount;\r\n    return new _web3.eth.Contract(abi, address);\r\n};\r\n\r\n// export const tokenContract = (address, web3) => {\r\n//     return getContract(tokenAbi, address, web3)\r\n// }\r\n\r\n// export const StakeContract = (address, web3) => {\r\n//     return getContract(stakeAbi, address, web3)\r\n// }\r\n\r\n// export const ApproveContract = (address, web3) => {\r\n//     return getContract(approveAbi, address, web3)\r\n// }\r\n\r\nexport const SkeletonContract = (address, web3) => {\r\n    return getContract(tickting, address, web3);\r\n};\r\n\r\n\r\n\r\n","import { useCallback } from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport useWeb3 from \"./useWeb3\";\r\nimport environment from \"../utils/Environment\";\r\nimport { SkeletonContract } from \"../utils/contractHelpers\";\r\nimport Web3 from \"web3\";\r\nimport HDWalletProvider from \"@truffle/hdwallet-provider\";\r\nimport { soliditySha3 } from \"web3-utils\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Minting = () => {\r\n  const { account } = useWeb3React();\r\n  const web3 = useWeb3();\r\n  const privKey =\r\n    \"46a47b4baaa44e316151a504e9f1ae2a9a2c3e3086d851f67efd4e243dcfe9d2\";\r\n  const provider = new HDWalletProvider(\r\n    privKey,\r\n    \"https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\"\r\n  );\r\n  const contractAddress = environment.musabContract;\r\n  const web31 = new Web3(provider);\r\n\r\n  const contract = SkeletonContract(contractAddress, web3);\r\n  const userMinting = useCallback(\r\n    async (mintVal) => {\r\n      try {\r\n\r\n        console.log('minting values=========>', mintVal)\r\n        const deadline = parseInt(Date.now() / 1000 + 400);\r\n        const soliditySha3Expected = soliditySha3(\r\n          environment.musabContract,\r\n          account,\r\n          deadline,\r\n          mintVal\r\n        );\r\n        let something = await web31.eth.accounts.sign(soliditySha3Expected, privKey);\r\n        let fees = await contract.methods.Price().call();\r\n        fees = fees / 1000000000000000000;\r\n        const MINT_NFT_FEE = mintVal * fees;\r\n        console.log(\"in  mint\")\r\n        // const gasfee = await contract.methods\r\n        //   .Mint(mintVal)\r\n        //   .estimateGas({\r\n        //     from: account,\r\n        //     gas: 21000,\r\n        //     value: Web3.utils.toWei(MINT_NFT_FEE.toString(), \"ether\"),\r\n        //   })\r\n\r\n        const details = await contract.methods\r\n          .Mint(mintVal)\r\n          .send({\r\n            from: account,\r\n            // gas: gasfee,\r\n            value: Web3.utils.toWei(MINT_NFT_FEE.toString(), \"ether\"),\r\n          })\r\n          .on(\"transactionHash\", (tx) => {\r\n            return tx.transactionHash;\r\n          })\r\n          .catch((err) => {\r\n            return err;\r\n          });\r\n        console.log('succccccccccccccccccccccccccccccccccccccc', details)\r\n        return details;\r\n\r\n      } catch (error) {\r\n        console.log('errrrrororor',error)\r\n        throw (error)\r\n        // toast.error(\"Sale must be active to mint nft\");\r\n        if (error.toString().slice(0, 5) === \"Error\") {\r\n          toast.error(\"Sale must be active to mint nft\");\r\n        }\r\n        console.log('error of the minting=====>', error)\r\n      }\r\n\r\n    },\r\n    [account, contract]\r\n  );\r\n  return { userMinting: userMinting };\r\n};\r\n\r\nexport default Minting;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import React from \"react\";\r\nimport useWindowDimensions from \"../hooks/getDimensions\"\r\n\r\nfunction Loader() {\r\n  const { width } = useWindowDimensions();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"\" style={{marginTop: -90}}>\r\n        <div\r\n          className=\"position-fixed  w-100\"\r\n          style={{\r\n            zIndex: 1100,\r\n            marginLeft: width > 992 ? 0 : 0,\r\n            background: \"rgba(0, 0, 0, 0.6)\",\r\n          }}\r\n        >\r\n          <div className=\" d-flex align-items-center justify-content-center\" style={{height:'120vh'}}>\r\n            <div className=\"d-flex flex-wrap align-items-center justify-content-center\">\r\n              <img width={154} className=\"mt-n5 loading\" src={'https://v.fastcdn.co/u/430e104e/57579327-0-Loaders-3.svg'} alt=\"\" style={{filter: 'invert(72%) sepia(74%) saturate(502%) hue-rotate(161deg) brightness(92%) contrast(91%)'}}/>\r\n              <h2\r\n                className=\"text-white w-100 text-center mt-5\"\r\n              >\r\n                Minting is in process\r\n              </h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Loader;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RiMenu3Line, RiCloseLine } from 'react-icons/ri';\r\nimport logo from '../../logo.png';\r\nimport './navbar.css';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport { Link } from 'react-router-dom';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport Minting from \"../../hooks/Minting\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Loader from \"../../hooks/loader\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useWeb3 from '../../hooks/useWeb3';\r\nimport environment from '../../utils/Environment';\r\n\r\nconst Navbar = () => {\r\n  const [toggleMenu, setToggleMenu] = useState(false);\r\n  const { login, logout } = useAuth();\r\n  const { account, chainId } = useWeb3React();\r\n  const [shownav, setShowNav] = useState(false)\r\n  const [downloadable, setDownloadable] = useState(false)\r\n  console.log('ddddddddddddddddddddddd====', account)\r\n  const [open, Close] = useState(true);\r\n  const [mainLoader, setMainLoader] = useState(false);\r\n  const { userMinting } = Minting();\r\n  const web3 = useWeb3();\r\n\r\n  const connectMetamask = () => {\r\n    localStorage.setItem('connectorId', 'injected');\r\n    if (account) {\r\n      logout();\r\n    } else {\r\n      login('injected');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const showModal = () => {\r\n    window.$(\"#exampleModal\").modal('show');\r\n  }\r\n  const disconnect = () => {\r\n    logout()\r\n  }\r\n\r\n  const Disconnect = async () => {\r\n    logout();\r\n    localStorage.setItem('connectorId', '');\r\n  };\r\n  const handleResize = () => {\r\n    console.log(\"window.innerWidth\", window?.innerWidth)\r\n    if (window.innerWidth < 768) {\r\n      setShowNav(false)\r\n    } else {\r\n      setShowNav(true)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    handleResize();\r\n  }, [])\r\n  const wallletconnect = () => {\r\n    localStorage.setItem('connectorId', 'walletconnect');\r\n    if (account) {\r\n      logout();\r\n      window.$(\"#exampleModalmerchf\").modal('hide');\r\n    } else {\r\n      login('walletconnect');\r\n      window.$(\"#exampleModalmerchf\").modal('hide');\r\n    }\r\n  };\r\n  const connectMetaMask = () => {\r\n    console.log(\"$$$\")\r\n    if (account) {\r\n      logout()\r\n      window.$(\"#exampleModalmerchf\").modal('hide');\r\n    } else {\r\n      login(\"injected\")\r\n      window.$(\"#exampleModalmerchf\").modal('hide');\r\n    }\r\n  }\r\n  const minto = async () => {\r\n    if (account) {\r\n      setMainLoader(true);\r\n      try {\r\n        const res = await userMinting(1);\r\n        setMainLoader(false);\r\n        if (res?.code === 4001) {\r\n          await setMainLoader(false);\r\n          await toast.error(\"User denied transaction.\");\r\n        } else if (res?.code === 4002) {\r\n          await setMainLoader(false);\r\n          await toast.error(\"Transaction failed.\");\r\n        } else {\r\n          toast.success(\"Minting Successful\");\r\n        }\r\n        console.log('res=======', res)\r\n\r\n      } catch (error) {\r\n        setMainLoader(false);\r\n        toast.error(error.message);\r\n\r\n        console.log('mintoerror====>', error)\r\n      }\r\n    } else {\r\n      toast.warning(\"Connect Wallet First!\");\r\n    }\r\n  }\r\n\r\n  const checkBalance = async () => {\r\n    console.log(\"$$$\")\r\n    if (account) {\r\n      const contractAddress = environment.musabContract;\r\n      const contract = SkeletonContract(contractAddress, web3);\r\n      let balance = await contract.methods.balanceOf().call();\r\n      if (balance > 0) {\r\n        setDownloadable(true)\r\n      } else {\r\n        setDownloadable(false)\r\n      }\r\n    } else {\r\n      login(\"injected\")\r\n\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // login(\"injected\");\r\n    checkBalance();\r\n    console.log(\"chainId\", chainId);\r\n    if (chainId != \"1\") {\r\n      // toast.error(\"Select Ethereum Network\");\r\n    }\r\n  }, [account])\r\n  return (\r\n    <>\r\n      {mainLoader && <Loader />}\r\n      <div className=\"gpt3__navbar\">\r\n        <ToastContainer />\r\n\r\n        <div className=\"gpt3__navbar-links\">\r\n          <div className=\"gpt3__navbar-links_logo\">\r\n            <img src={logo} className=\"logo\" />\r\n          </div>\r\n          <div className=\"gpt3__navbar-links_container\">\r\n            <p>\r\n              <a href=\"#home\">Home</a>\r\n            </p>\r\n            <p>\r\n              <a href=\"#wgpt3\">What is Akasha?</a>\r\n            </p>\r\n            <p>\r\n              <button id=\"bt\" className='bg-transparent border-0' onClick={minto}>Minty</button>\r\n            </p>\r\n            <p>\r\n              <a\r\n                href=\"https://www.keepandshare.com/doc6/38222/akasha-original-white-paper-1-pdf-129k?da=y\"\r\n                target=\"_blank\" rel=\"noreferrer\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                White Paper\r\n              </a>\r\n            </p>\r\n            <p>\r\n              <a href=\"#team\">Team</a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"gpt3__navbar-sign\">\r\n          <button type=\"button\" className={account && 'bg-success'} data-toggle=\"modal\" data-target=\"#exampleModalmerchf\">{account ? \"Disconnect Wallet\" : \"Connect Wallet\"}</button>\r\n          {\r\n            downloadable ?\r\n              <button type=\"button\" className={'bg-info'} >Download</button>\r\n              :\r\n              \"\"\r\n          }\r\n        </div>\r\n        <div className=\"gpt3__navbar-menu\">\r\n          {toggleMenu ? (\r\n            <RiCloseLine\r\n              color=\"#fff\"\r\n              size={27}\r\n              onClick={() => setToggleMenu(false)}\r\n            />\r\n          ) : (\r\n            <RiMenu3Line\r\n              color=\"#fff\"\r\n              size={27}\r\n              onClick={() => setToggleMenu(true)}\r\n            />\r\n          )}\r\n          {toggleMenu && (\r\n            <div className=\"gpt3__navbar-menu_container scale-up-center\">\r\n              <div className=\"gpt3__navbar-menu_container-links\">\r\n                <p>\r\n                  <a href=\"#home\">Home</a>\r\n                </p>\r\n                <p>\r\n                  <a href=\"#wgpt3\">What is Akasha</a>\r\n                </p>\r\n                <p>\r\n                  <button id=\"bt\" onClick={minto}>Mint</button>\r\n                </p>\r\n                <p>\r\n                  <a href=\"#features\">White Paper</a>\r\n                </p>\r\n                <p>\r\n                  <a href=\"#blog\">Company</a>\r\n                </p>\r\n              </div>\r\n              <div className=\"gpt3__navbar-menu_container-links-sign\">\r\n                <button type=\"button\" data-toggle=\"modal\" className={account && 'bg-success'} data-target=\"#exampleModalmerchf\">{account ? \"Disconnect Wallet\" : \"Connect Wallet\"}</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* modal */}\r\n\r\n        <div class=\"modal fade\" id=\"exampleModalmerchf\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-dialog-wallet\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h3 class=\"modal-title text-white text-center text-uppercase w-100\" id=\"exampleModalLabel\">{\" Wallet\"}</h3>\r\n                <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-label=\"Close\"><img src=\"assets/errorSign.svg\" alt=\"\" /></button>\r\n              </div>\r\n              <div class=\"modal-body p-5 text-center\">\r\n                <button className='w-100 ' type='button' onClick={connectMetaMask}>\r\n                  <div className=\"row pb-2 pt-1\">\r\n                    {account ?\r\n                      <div className='outerdivs-meta' >\r\n                        <div className=\"col-12 text-end\">\r\n                          <img src=\"/MetaMask_Fox.png\" alt=\"metamasklogo\" className='img-fluid' />\r\n                        </div>\r\n                        <div className=\"col-12 my-auto p-0 text-start\">\r\n                          <p>Disconnect Metamask</p>\r\n                        </div>\r\n                      </div>\r\n                      :\r\n                      <div className='outerdivs-meta'>\r\n                        <div className=\"col-12 text-end\">\r\n                          <img src=\"/MetaMask_Fox.png\" alt=\"metamasklogo\" className='img-fluid' />\r\n                        </div>\r\n                        <div className=\"col-12 my-auto p-0 text-start\">\r\n                          <p>Connect Metamask</p>\r\n                        </div>\r\n                      </div>\r\n                    }\r\n                  </div>\r\n                </button>\r\n                {/* <button className='w-100 mt-3' type='button' >\r\n                                <div className=\"row pb-2\">\r\n                                    {account ?\r\n                                        <div className='walletconnect d-flex justify-content-center w-100' onClick={wallletconnect}>\r\n                                            <div className=\"col-12 text-end \">\r\n                                                <img src=\"\\walletconnect.png\" className='img-fluid' alt=\"walletconnect logo\" />\r\n                                            </div>\r\n                                            <div className=\"col-12 my-auto p-0 text-start\">\r\n                                                <p>Wallet Disconnect</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        :\r\n                                        <div className='walletconnect' onClick={wallletconnect}>\r\n                                            <div className=\"col-12 text-end \">\r\n                                                <img src=\"\\walletconnect.png\" className='img-fluid' alt=\"walletconnect logo\" />\r\n                                            </div>\r\n                                            <div className=\"col-12 my-auto p-0 text-start\">\r\n                                                <p>WalletConnect</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </button> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* modal */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useEffect } from 'react'\r\nimport useAuth from './useAuth'\r\n\r\nconst ConnectorNames =  {\r\n    Injected : \"injected\",\r\n    WalletConnect : \"walletconnect\",\r\n    BSC : \"bsc\"\r\n}\r\n\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(\"connectorId\")\r\n\r\n    // Disable eager connect for BSC Wallet. Currently the BSC Wallet extension does not inject BinanceChain\r\n    // into the Window object in time causing it to throw an error\r\n    // TODO: Figure out an elegant way to listen for when the BinanceChain object is ready\r\n    if (connectorId && connectorId !== ConnectorNames.BSC) {\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","import React from 'react';\r\n\r\nimport { Footer, Blog, Possibility, Features, WhatGPT3, Header, Team } from './containers';\r\nimport { CTA, Brand, Navbar } from './components';\r\nimport useEagerConnect from './hooks/useEagerConnect'\r\nimport './App.css';\r\nimport './App.scss';\r\nimport { setupNetwork } from './utils/wallet';\r\n\r\nfunction App() {\r\n  useEagerConnect();\r\nsetupNetwork();\r\n  return (\r\n     <div className=\"App\">\r\n    <div className=\"gradient__bg\">\r\n      <Navbar />\r\n      <Header />\r\n    </div>\r\n    <Brand />\r\n    <WhatGPT3 />\r\n    <Features />\r\n    <Possibility />\r\n    <CTA />\r\n    <Team />\r\n    <Blog />\r\n    <Footer />\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n","const initialState={\r\n    products:[],\r\n    cart:[]\r\n}\r\nexport const productReducers = (state=initialState,{type,payload})=>{\r\n    console.log(\"payload in  produect\",payload)\r\n    switch(type){\r\n        case \"SET_PRODUCTS\":\r\n            return{...state,products:payload}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const cartReducers = (state=initialState,{type ,payload,qty ,id})=>{\r\n\r\n    switch(type){\r\n            case \"ADD_TO_CART\":\r\n            console.log(\"reducers\",payload);\r\n            // console.log(\"reducers\",products);\r\n                const existItem=state.products.find(x => x.id === payload.id);\r\n                // console.log(\"exsisste itemss\",existItem)\r\n                if(existItem){\r\n                    alert('Item already added in cart');\r\n                }\r\n                else{\r\n                    return{\r\n                       ...state,\r\n                       products:state.products.concat(payload)\r\n                    }\r\n                }\r\n            case \"REMOVE_FROM_CART\" :\r\n                return{\r\n                    products:state.products.filter(id=>id.id !== payload),\r\n                }\r\n            case \"UPDATE_QUANTITY\":\r\n            //  console.log(\"reducers qty\",qty);\r\n            //  console.log(\"reducers id \",id);\r\n             return {\r\n                ...state,\r\n                 products:state.products.map((item)=>{\r\n                     console.log('items',item)\r\n                   return  item.id === id ? {...item, qty:qty}:item\r\n                 })\r\n             }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {combineReducers} from 'redux';\r\nimport {productReducers,cartReducers} from './productReducers';\r\nconst reducers = combineReducers({\r\n    allProducts:productReducers,\r\n    cart:cartReducers\r\n});\r\nexport default reducers;","import {createStore} from 'redux';\r\n// import reducers from './Reducers/Index';\r\nimport reducers from './Reducers/Index.js';\r\nconst store=createStore(\r\n    reducers,\r\n    {},\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { getLibrary } from './utils/web3React'\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <App />\r\n    </Web3ReactProvider>\r\n  </Provider>,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}